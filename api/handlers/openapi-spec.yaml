openapi: 3.0.0
info:
  title: CRUD Api for Vehicles Manufacturer
  description: A simple Vehicles manufacturer service that allows users perform CRUD Operations on manufacturers data.
  version: 1.0.0
  contact:
    name: Support
    email: support@unknown.com
servers:
  - url: http://localhost:8080
    description: Dev server
tags:
  - name: URL
    description: |-
      Endpoints for vehicles manufacturer service. Where possible direct API
      
      # Error response codes
      
      | Error code | Error message |
      |------------|---------------|
      | E50000    | Internal server error occurred. Please check logs for more details. |
      | E50001    | Request validation failed. <error message> |



paths:
  /api/v1/manufacturers:
    post:
      summary: Post new Manufacturer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ManufacturerRequest'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManufacturerResponse'
        '400':
          $ref: '#/components/responses/400BadRequest'
        '500':
          $ref: '#/components/responses/500ServerError'
    get:
      summary: Get all manufacturers
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManufacturerArrayResponse'
        '400':
          $ref: '#/components/responses/400BadRequest'
        '500':
          $ref: '#/components/responses/500ServerError'


  /api/v1/manufaturers/{manufacturerId}:
    get:
      summary: Get manufacturer by Id
      parameters:
        - in: path
          name: manufacturerId
          schema:
            type: integer
          required: true
          description: manufacturer id
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManufacturerResponse'
        '500':
          $ref: '#/components/responses/500ServerError'
    put:
      summary: Update manufacturer by Id
      parameters:
        - in: path
          name: manufacturerId
          schema:
            type: integer
          required: true
          description: manufacturer id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ManufacturerRequest'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManufacturerResponse'
        '500':
          $ref: '#/components/responses/500ServerError'

    delete:
      summary: Delete manufacturer by Id
      parameters:
        - in: path
          name: manufacturerId
          schema:
            type: integer
          required: true
          description: manufacturer id
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManufacturerResponse'
        '500':
          $ref: '#/components/responses/500ServerError'

components:
  schemas:
    ManufacturerRequest:
      type: object
      properties:
        Country:
          type: string
          example: UNITED STATES (USA)
        Mfr_CommonName: 
          type: string 
          example: Tesla
        Mfr_ID: 
          type: integer
          format: int64
          example: 955
        Mfr_Name: 
          type: string
          example: TESLA, INC.
        VehicleTypes: 
          type: array
          items:
            $ref: '#/components/schemas/VehicleTypesRequest'

    VehicleTypesRequest:
      type: object 
      properties: 
          IsPrimary: 
            type: boolean 
            example: true
          Name: 
            type: string
            example: Passenger Car


    ManufacturerResponse:
      type: object
      properties:
        originalUrl:
          type: string
          format: uri
          example: https://www.example.com/long/url
        shortUrl:
          type: string
          example: http://short.ly/abc123

    ManufacturerArrayResponse:
      type: array
      items:
        $ref: '#/components/schemas/ManufacturerResponse'

    MetricsResponse:
      type: object
      properties:
        topDomains:
          type: array
          items:
            $ref: '#/components/schemas/DomainMetric'

    DomainMetric:
      type: object
      properties:
        domain:
          type: string
          example: udemy.com
        count:
          type: integer
          example: 6

    SuccessResponse:
      type: object
      properties:
        message:
          type: string
    error:
      type: object
      properties:
        message:
          type: string
        code:
          type: string


  responses:
    400BadRequest:
      description: Something is incorrect about the structure of the request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error'

    500ServerError:
      description: Something went wrong in our processing.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error'

    404NotFound:
      description: Link not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error'
