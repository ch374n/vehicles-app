name: Go Code Checks

on:
  workflow_dispatch:
  pull_request:
    branches: [ main ]

jobs:

  go-checks:
    name: Go Code Checks
    runs-on: ubuntu-latest
    steps:

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.22.4

    - name: Check out code
      uses: actions/checkout@v3

      - name: Run format check
        id: format
        run: |
          make format
          format_output=$(go fmt ./... 2>&1)  # Capture stderr and stdout

      - name: Capture format output
        id: capture_format_output
        run: |
          echo "$format_output" > format_output.txt

      - name: Run tests
        id: tests
        run: |
          test_output=$(go test ./... -coverpkg ./... -coverprofile=coverage.out 2>&1)  # Capture stderr and stdout

      - name: Capture tests output
        id: capture_tests_output
        run: |
          echo "$test_output" > tests_output.txt

      - name: Run coverage
        id: coverage
        run: |
          coverage_output=$(go test -coverprofile=coverage.out ./... 2>&1)  # Capture stderr and stdout
          cat coverage.out | grep -vE '(/app/|configs|/logger/|/generated/|/cloud/)â€™ > coverage_filtered.out

    - name: Comment on PR
      uses: actions/github-script@v6
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const fs = require('fs');

          const formatOutput = process.env.format_output || 'No output';
          const testOutput = process.env.test_output || 'No output';
          const coverageOutput = process.env.coverage_output || 'No output';

          const comment = `
          ### Format Check Output
          ${formatOutput}

          ### Tests Output
          ${testOutput}

          ### Coverage Output
          ${coverageOutput}
          `;

          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });
